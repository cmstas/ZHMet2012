#include "TEMPLATES.h"
TEMPLATES templates;
namespace Templates {
	int &run() { return templates.run(); }
	int &lumi() { return templates.lumi(); }
	int &event() { return templates.event(); }
	int &nvtx() { return templates.nvtx(); }
	float &weight() { return templates.weight(); }
	float &pthat() { return templates.pthat(); }
	int &failjetid() { return templates.failjetid(); }
	float &maxemf() { return templates.maxemf(); }
	float &maxleppt() { return templates.maxleppt(); }
	int &elveto() { return templates.elveto(); }
	float &ht30() { return templates.ht30(); }
	float &ht40() { return templates.ht40(); }
	float &jzb() { return templates.jzb(); }
	float &pfmet() { return templates.pfmet(); }
	float &pfmett1() { return templates.pfmett1(); }
	float &pfmett1new() { return templates.pfmett1new(); }
	float &pfmet_type1_pt30() { return templates.pfmet_type1_pt30(); }
	float &pfmet_type1_pt15() { return templates.pfmet_type1_pt15(); }
	float &pfmetphi() { return templates.pfmetphi(); }
	float &pfmett1phi() { return templates.pfmett1phi(); }
	float &pfmett1newphi() { return templates.pfmett1newphi(); }
	float &pfsumet() { return templates.pfsumet(); }
	float &met() { return templates.met(); }
	float &metphi() { return templates.metphi(); }
	float &sumet() { return templates.sumet(); }
	float &mumet() { return templates.mumet(); }
	float &mumetphi() { return templates.mumetphi(); }
	float &musumet() { return templates.musumet(); }
	float &mujesmet() { return templates.mujesmet(); }
	float &mujesmetphi() { return templates.mujesmetphi(); }
	float &mujessumet() { return templates.mujessumet(); }
	float &genmet() { return templates.genmet(); }
	float &genmetphi() { return templates.genmetphi(); }
	float &gensumet() { return templates.gensumet(); }
	float &dphixmet() { return templates.dphixmet(); }
	float &metpar() { return templates.metpar(); }
	float &metperp() { return templates.metperp(); }
	float &tcmet() { return templates.tcmet(); }
	float &tcmetphi() { return templates.tcmetphi(); }
	float &tcsumet() { return templates.tcsumet(); }
	float &tcmetNew() { return templates.tcmetNew(); }
	float &tcmetNew_type1_pt30() { return templates.tcmetNew_type1_pt30(); }
	float &tcmetNew_type1_pt15() { return templates.tcmetNew_type1_pt15(); }
	float &tcmetphiNew() { return templates.tcmetphiNew(); }
	float &tcsumetNew() { return templates.tcsumetNew(); }
	int &njets() { return templates.njets(); }
	int &njets10() { return templates.njets10(); }
	int &njets15() { return templates.njets15(); }
	int &njets20() { return templates.njets20(); }
	int &njets40() { return templates.njets40(); }
	float &ht() { return templates.ht(); }
	float &ht10() { return templates.ht10(); }
	float &vecjetpt() { return templates.vecjetpt(); }
	int &nbl() { return templates.nbl(); }
	int &nbm() { return templates.nbm(); }
	int &nbt() { return templates.nbt(); }
	float &ndphijetmet() { return templates.ndphijetmet(); }
	float &maxjetpt() { return templates.maxjetpt(); }
	float &maxjetdphimet() { return templates.maxjetdphimet(); }
	int &hlt20() { return templates.hlt20(); }
	int &hlt30() { return templates.hlt30(); }
	int &hlt50() { return templates.hlt50(); }
	int &hlt75() { return templates.hlt75(); }
	int &hlt90() { return templates.hlt90(); }
	int &hlt135() { return templates.hlt135(); }
	int &hlt150() { return templates.hlt150(); }
	int &hlt160() { return templates.hlt160(); }
	int &hgg22() { return templates.hgg22(); }
	int &hgg36() { return templates.hgg36(); }
	int &hgg50() { return templates.hgg50(); }
	int &hgg75() { return templates.hgg75(); }
	int &hgg90() { return templates.hgg90(); }
	float &rho() { return templates.rho(); }
	int &vtxidx() { return templates.vtxidx(); }
	int &ng() { return templates.ng(); }
	float &etg() { return templates.etg(); }
	float &etag() { return templates.etag(); }
	float &phig() { return templates.phig(); }
	float &hoe() { return templates.hoe(); }
	float &eciso() { return templates.eciso(); }
	float &hciso() { return templates.hciso(); }
	float &tkiso() { return templates.tkiso(); }
	float &swiss() { return templates.swiss(); }
	float &seed() { return templates.seed(); }
	float &s4() { return templates.s4(); }
	float &r4() { return templates.r4(); }
	int &photon_scidx() { return templates.photon_scidx(); }
	int &photon_pixelseed() { return templates.photon_pixelseed(); }
	float &photon_e15() { return templates.photon_e15(); }
	float &photon_e25max() { return templates.photon_e25max(); }
	float &photon_e33() { return templates.photon_e33(); }
	float &photon_e55() { return templates.photon_e55(); }
	float &photon_ecalIso03() { return templates.photon_ecalIso03(); }
	float &photon_ecalIso04() { return templates.photon_ecalIso04(); }
	float &photon_hcalIso03() { return templates.photon_hcalIso03(); }
	float &photon_hcalIso04() { return templates.photon_hcalIso04(); }
	float &photon_ntkIsoHollow03() { return templates.photon_ntkIsoHollow03(); }
	float &photon_ntkIsoHollow04() { return templates.photon_ntkIsoHollow04(); }
	float &photon_ntkIsoSolid03() { return templates.photon_ntkIsoSolid03(); }
	float &photon_ntkIsoSolid04() { return templates.photon_ntkIsoSolid04(); }
	float &photon_sigmaEtaEta() { return templates.photon_sigmaEtaEta(); }
	float &photon_sigmaIEtaIEta() { return templates.photon_sigmaIEtaIEta(); }
	float &photon_sigmaIPhiIPhi() { return templates.photon_sigmaIPhiIPhi(); }
	float &photon_tkisoHollow03() { return templates.photon_tkisoHollow03(); }
	float &photon_tkisoHollow04() { return templates.photon_tkisoHollow04(); }
	float &photon_tkisoSolid03() { return templates.photon_tkisoSolid03(); }
	float &photon_tkisoSolid04() { return templates.photon_tkisoSolid04(); }
	float &jetdr() { return templates.jetdr(); }
	float &jetpt() { return templates.jetpt(); }
	float &calojetpt() { return templates.calojetpt(); }
	int &pfjetid() { return templates.pfjetid(); }
	float &jeteta() { return templates.jeteta(); }
	float &jetenergy() { return templates.jetenergy(); }
	float &jetchargedemfrac() { return templates.jetchargedemfrac(); }
	float &jetchargedhadfrac() { return templates.jetchargedhadfrac(); }
	float &jetneutralemfrac() { return templates.jetneutralemfrac(); }
	float &jetneutralhadfrac() { return templates.jetneutralhadfrac(); }
	int &jetncharged() { return templates.jetncharged(); }
	int &jetnmuon() { return templates.jetnmuon(); }
	int &jetnneutral() { return templates.jetnneutral(); }
	float &jetdphimet() { return templates.jetdphimet(); }
	float &jetdpt() { return templates.jetdpt(); }
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet1() { return templates.jet1(); }
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet2() { return templates.jet2(); }
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet3() { return templates.jet3(); }
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet4() { return templates.jet4(); }
	int &jet1flav() { return templates.jet1flav(); }
	int &jet2flav() { return templates.jet2flav(); }
	int &jet3flav() { return templates.jet3flav(); }
	int &jet4flav() { return templates.jet4flav(); }
	int &jet1mcfa() { return templates.jet1mcfa(); }
	int &jet2mcfa() { return templates.jet2mcfa(); }
	int &jet3mcfa() { return templates.jet3mcfa(); }
	int &jet4mcfa() { return templates.jet4mcfa(); }
	int &jet1mcfp() { return templates.jet1mcfp(); }
	int &jet2mcfp() { return templates.jet2mcfp(); }
	int &jet3mcfp() { return templates.jet3mcfp(); }
	int &jet4mcfp() { return templates.jet4mcfp(); }
	float &csv1() { return templates.csv1(); }
	float &csv2() { return templates.csv2(); }
	float &csv3() { return templates.csv3(); }
	float &csv4() { return templates.csv4(); }
	float &jet1drgen() { return templates.jet1drgen(); }
	float &jet2drgen() { return templates.jet2drgen(); }
	float &jet3drgen() { return templates.jet3drgen(); }
	float &jet4drgen() { return templates.jet4drgen(); }
	float &jet1beta1_01() { return templates.jet1beta1_01(); }
	float &jet2beta1_01() { return templates.jet2beta1_01(); }
	float &jet3beta1_01() { return templates.jet3beta1_01(); }
	float &jet4beta1_01() { return templates.jet4beta1_01(); }
	float &jet1beta2_01() { return templates.jet1beta2_01(); }
	float &jet2beta2_01() { return templates.jet2beta2_01(); }
	float &jet3beta2_01() { return templates.jet3beta2_01(); }
	float &jet4beta2_01() { return templates.jet4beta2_01(); }
	float &jet1beta1_05() { return templates.jet1beta1_05(); }
	float &jet2beta1_05() { return templates.jet2beta1_05(); }
	float &jet3beta1_05() { return templates.jet3beta1_05(); }
	float &jet4beta1_05() { return templates.jet4beta1_05(); }
	float &jet1beta2_05() { return templates.jet1beta2_05(); }
	float &jet2beta2_05() { return templates.jet2beta2_05(); }
	float &jet3beta2_05() { return templates.jet3beta2_05(); }
	float &jet4beta2_05() { return templates.jet4beta2_05(); }
	float &jet1beta1_10() { return templates.jet1beta1_10(); }
	float &jet2beta1_10() { return templates.jet2beta1_10(); }
	float &jet3beta1_10() { return templates.jet3beta1_10(); }
	float &jet4beta1_10() { return templates.jet4beta1_10(); }
	float &jet1beta2_10() { return templates.jet1beta2_10(); }
	float &jet2beta2_10() { return templates.jet2beta2_10(); }
	float &jet3beta2_10() { return templates.jet3beta2_10(); }
	float &jet4beta2_10() { return templates.jet4beta2_10(); }
	int &csc() { return templates.csc(); }
	int &hbhe() { return templates.hbhe(); }
	int &hbhenew() { return templates.hbhenew(); }
	int &hcallaser() { return templates.hcallaser(); }
	int &ecallaser() { return templates.ecallaser(); }
	int &ecaltp() { return templates.ecaltp(); }
	int &trkfail() { return templates.trkfail(); }
	int &eebadsc() { return templates.eebadsc(); }
	float &mjj() { return templates.mjj(); }
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &pujets() { return templates.pujets(); }
	int &npujets() { return templates.npujets(); }
}
